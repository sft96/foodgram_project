name: Foodgram

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return
          pip install -r backend/requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8
  build_and_push_to_docker_hub:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend
        uses: docker/build-push-action@v4
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: shreddedcode/backend:latest
      - name: Push backend
        uses: docker/build-push-action@v4
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: shreddedcode/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram-project-react/
            rm .env
            touch .env 
            echo SECRET_KEY='${{ secrets.SECRET_KEY }}' >> .env
            echo DB_ENGINE='${{ secrets.POSTGRES_ENGINE }}' >> .env 
            echo DB_NAME='${{ secrets.POSTGRES_NAME }}' >> .env 
            echo POSTGRES_USER='${{ secrets.POSTGRES_USER }}' >> .env 
            echo POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' >> .env 
            echo DB_HOST='${{ secrets.POSTGRES_HOST }}' >> .env 
            echo DB_PORT='${{ secrets.POSTGRES_PORT }}' >> .env

            sudo docker compose stop
            sudo docker compose rm -f backend
            sudo docker shreddedcode/backend:latest
            sudo docker compose up -d --build
            sudo docker compose exec backend python manage.py makemigrations
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic --no-input
            sudo docker compose exec backend python manage.py load_ing_data
            sudo docker compose exec backend python manage.py load_tags_data
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} выполнен!
